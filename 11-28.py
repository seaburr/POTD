import random

'''
Good morning! Here's your coding interview problem for today.

This problem was asked by Stripe.

Given an array of integers, find the first missing positive integer in linear time and constant space. In other words, find the lowest positive integer that does not exist in the array. The array can contain duplicates and negative numbers as well.

For example, the input [3, 4, -1, 1] should give 2. The input [1, 2, 0] should give 3.

You can modify the input array in-place.
'''

test_1 = [3, 4, -1, 1]
test_2 = [1, 2, 0]
test_3 = []
test_4 = [100, 95, 3, -1]
test_5 = [135, -495, 371, -11, -183, -78, -328, 29, 138, 434, 281, 449, 215, 439, 307, -450, 437, 401, 476, 149, 391, 0, 138, -434, 73, 35, -61, -259, -424, -101, -443, 499, 428, 394, -331, 321, -198, 299, 147, -166, 296, 250, 31, 185, -162, -374, 384, 132, -381, -47, 248, 362, -432, -240, 386, 334, 273, 236, 428, 427, -493, -154, 127, 347, 491, -484, 172, 343, 41, 441, -346, -115, -107, 373, 3, -387, -15, 265, -214, 89, 487, 386, 272, 63, 401, 107, -369, -495, -500, -477, 338, -379, 210, -483, -265, 33, -387, -185, 432, -153, 98, -100, -174, -450, 14, -169, 8, -469, -288, 442, 123, -440, -51, -4, 276, 291, -343, -227, -467, 143, 243, 355, 180, -178, 432, 151, -260, 450, -344, 328, 164, -96, -347, 416, -63, 280, -107, -320, 212, -27, -223, 64, -365, -413, -476, -472, -319, -125, 470, 124, -303, -415, 200, 352, 465, -337, -41, 17, -86, -9, -222, 438, 321, 130, -171, 198, -170, -297, 67, 415, -74, -205, 94, 449, 164, -95, -311, -251, -30, 444, 470, -12, -390, 123, -319, -97, -96, -358, -228, -465, 278, -404, -184, 386, -396, 57, -180, 84, 388, 356, 461, 153, 311, -58, -338, -354, 148, -78, -384, 76, -264, -177, -389, -188, -130, 152, -478, 17, -47, -328, -134, -356, 156, -322, 61, -48, 389, 205, -440, -306, 95, 62, -382, 207, 372, -284, 249, -494, 9, 202, -287, 31, 450, 383, -406, -32, -25, 157, -126, 386, 387, -140, 382, -300, -98, 144, -43, 143, -256, 226, -130, 8, 166, 97, -180, -422, 60, 414, -217, 15, 411, 355, 488, -395, -106, 117, 369, 372, 349, -430, -308, 198, -260, 9, -270, 111, -249, 461, 247, 371, 321, 222, -38, 107, -39, -406, -207, 309, -442, 301, -203, 459, -36, 141, -435, 254, -144, -478, 402, -192, -379, -404, 7, -457, -498, 411, 79, 179, -77, -157, -468, -61, 42, -28, -468, -441, 110, 450, 453, -185, -419, -325, -206, -415, 380, 344, -400, -489, 89, -336, 227, -411, 225, -446, 381, 1, 298, 11, -122, -233, 411, -222, 424, 84, 180, 107, 469, 91, 258, 133, 280, -17, 177, 381, -209, 147, -119, -246, -31, -124, -147, -228, 231, 292, 237, 409, -50, 233, 237, -10, 83, 20, -200, 165, 149, -168, -119, -232, -346, 41, -104, -209, -173, 498, 320, -97, -434, 396, -222, -374, -192, 370, -279, 220, -268, -220, -300, 462, -213, 473, 460, -334, 494, -8, 66, 233, -317, 238, 301, -360, 353, -31, -135, -24, -394, 71, -414, -381, -439, -275, -392, -45, -440, 17, 366, 304, -416, -439, -18, 61, 210, 18, 224, -122, -307, 386, -140, -216, -418, 18, -382, 239, -7, 233, -54, 130, 499, 343, -481, -343, -131, 487, -257, 171, -159, 190, 334, -163, -33, 166, -46, 63, -386, -196, 280, 417, 329, -65, 172, 2, -170, 190, 177, 174, 405, -164, -382, 198, 468, 2, 132, -346, 86, 126, -307, 466, -185, -117, 487, 475, -35, 136, 201, -315, -189, 373, -294, 199, -155, 78, 179, -81, -233, 255, 124, -71, 333, -47, 126, -130, 343, 143, -188, -327, -414, 444, -383, -264, -335, -133, -4, 294, 223, 109, 6, -273, 76, -156, 92, -161, 292, -254, 328, -449, -283, 271, 414, 382, 36, -256, 103, 283, 125, -86, 164, -116, 366, -29, 10, -147, -85, 223, -150, 98, 494, 62, 339, 329, -111, -150, 238, 392, 37, -281, -119, -262, -65, 53, -127, 112, -313, -415, 297, 484, -123, 245, 131, 317, -278, -411, -234, 216, -334, -491, -37, 264, 10, -103, -81, -125, 432, -129, -395, 440, -120, 380, 297, 86, 3, 222, -287, -286, 222, -254, 414, -379, 259, -279, -72, 359, 304, -473, 130, -247, -267, -295, -291, -70, 89, -117, -343, 258, -190, -426, -172, -284, -81, 80, 171, 98, -363, -217, 184, 385, -178, 362, -75, 241, -448, -497, -469, 340, -92, -99, -97, 497, -494, -205, -52, -294, -142, 143, -432, -74, -180, 136, 498, 157, -239, -498, -46, -221, 493, -382, 247, -8, -370, 457, -297, -5, -319, -366, 76, -333, 11, -367, -480, 148, -120, 124, -78, -454, 222, 241, 4, 434, -137, -493, 103, 256, 446, 258, -343, 280, 93, 306, -148, 38, -339, 130, -108, -50, -411, 121, 174, 249, -208, -30, 196, 257, -341, -165, -83, 171, -356, 486, 91, 390, 367, 442, 418, 449, -138, 457, 349, 72, -171, 289, -441, 264, 320, 220, 476, 478, -353, -318, -247, 81, 153, -285, -3, 26, 67, 429, 130, 228, -192, 61, 179, -313, 336, 159, -179, 233, -419, 493, -63, -459, -402, -363, -116, -319, 242, 258, 412, 470, -465, 201, 129, -293, -478, 200, -468, 201, 417, -10, 217, 79, -366, -314, -450, 171, 346, -199, 129, -198, 407, -195, -36, 237, -342, -371, 322, -119, -26, 300, -11, 291, 326, 268, -54, 472, -406, -286, 40, -175, 472, 81, -249, 374, -85, 168, 138, 27, 62, -283, -480, -136, -179, 110, -450, 28, 286, 256, 491, 205, 148, 406, -205, -243, 434, -279, 374, -43, -360, 438, -206, -469, 85, 432, 197, 293, -157, 280, 470, -404, 162, 331, 261, 88, 124, 428, -374, 5, -168, 412, -415, 194, -72, -300, -277, 267, -158, -18, -266, -118, 340, -400, -283, 224, 244, -174, 213, -269, -265, -31, 85, -220, 271, -17, 222, 255, 128, 350, -483, 153, 311, -154, -129, 280, -160, -29, 85, 54, -1, 106, -63, -265, 14, 199, -392, -121, -132, 274, 443, -224, -179, -110, -99, -312, 432, 16, -350, 319, 363, -479, -1, 27, 419, 493, -124, -374, -174, -263, 331, -277, -20, 172, -140, -176, 281, -148, -414, 435, -380, 486, -488, -375, 365, -350, 486, -261, 260, 60, -219, -175, -264, -133, 208, -399, 121, -176, 256, 301, -302, -395, -248, -264, 119, 444, 373, -303, 232, -303, 481, -301, -194, 443, 461, -197, -277, 490, -346, 419, -44, -346, -18, -364, 395, 414, -122, 27, -499, -346, -3, -200, -339, -314, -479, 40]


def v1_lowest(input):
    output = None
    for i in range(0, len(input)):
        if input[i] + 1 > 0 and input[i] + 1 not in input:
            if output is None or input[i] + 1 < output:
                output = input[i] + 1
        if input[i] - 1 > 0 and input[i] - 1 not in input:
            if output is None or input[i] - 1 < output:
                output = input[i] - 1
    return output


print(v1_lowest(test_1))
print(v1_lowest(test_2))
print(v1_lowest(test_3))
print(v1_lowest(test_4))
print(v1_lowest(test_5))